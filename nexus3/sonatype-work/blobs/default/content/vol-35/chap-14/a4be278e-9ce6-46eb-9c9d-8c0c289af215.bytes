<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.catt.frame</groupId>
  <artifactId>isp-server</artifactId>
  <version>0.5.0.1</version>

  <name>接口服务提供框架（服务前置）</name>
  <description>接口服务提供框架（InterfaceServicesProvide，服务前置），简称ISP。</description>
  <url>http://172.168.27.5:81/svn/release/300_wgjk/04_server/04_ISP</url>

  <ciManagement>
    <system>jenkins</system>
    <url>http://172.168.10.100:8080/jenkins/job/服务前置jetty</url>
  </ciManagement>
  <scm>
    <connection>scm:svn:http://172.168.27.5:81/svn/release/300_wgjk/04_server/04_ISP/server-tags/isp-server-0.5.0.1</connection>
    <developerConnection>scm:svn:http://172.168.27.5:81/svn/release/300_wgjk/04_server/04_ISP/server-tags/isp-server-0.5.0.1</developerConnection>
    <url>scm:svn:http://172.168.27.5:81/svn/release/300_wgjk/04_server/04_ISP/server-tags/isp-server-0.5.0.1</url>
  </scm>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <ktjsdpVersion>1.1.0.0</ktjsdpVersion>
    <release.dir>${project.build.directory}/${project.artifactId}-${project.version}</release.dir>
    <cxf.version>3.0.1</cxf.version>
  </properties>

  <dependencies>
  	<!-- test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>test</scope>
    </dependency>

	<!-- ktjsdp -->
    <dependency>
      <groupId>com.catt</groupId>
      <artifactId>catt-utils</artifactId>
      <version>${ktjsdpVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.catt</groupId>
      <artifactId>catt-pub-conf</artifactId>
      <version>${ktjsdpVersion}</version>
      <exclusions>
      	<exclusion>
      		<artifactId>commons-beanutils</artifactId>
      		<groupId>commons-beanutils</groupId>
      	</exclusion>
      	<exclusion>
      		<artifactId>commons-logging</artifactId>
      		<groupId>commons-logging</groupId>
      	</exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.catt</groupId>
      <artifactId>catt-pub-db</artifactId>
      <version>${ktjsdpVersion}</version>
      <exclusions>
      	<exclusion>
      		<artifactId>commons-logging</artifactId>
      		<groupId>commons-logging</groupId>
      	</exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.catt</groupId>
      <artifactId>catt-pub-net</artifactId>
      <version>${ktjsdpVersion}</version>
    </dependency>

    <!-- proxool日志需要 -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>1.7.5</version>
    </dependency>

    <!-- log -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.0.13</version>
    </dependency>
    <!-- db driver -->
    <dependency>
      <groupId>com.cattsoft</groupId>
      <artifactId>ojdbc-14</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>com.cattsoft</groupId>
      <artifactId>mysql</artifactId>
      <version>5.1.29</version>
    </dependency>
    <dependency>
      <groupId>com.cattsoft</groupId>
      <artifactId>jconn3</artifactId>
      <version>1.0</version>
    </dependency>
    
    <!-- bean类toString方法使用 -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.3</version>
    </dependency>

    <!-- cxf -->
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxws</artifactId>
      <version>${cxf.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http</artifactId>
      <version>${cxf.version}</version>
    </dependency>
    <!-- Jetty is needed if you're are not using the CXFServlet -->
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http-jetty</artifactId>
      <version>${cxf.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>slf4j-jdk14</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- json 和 jdom包看下能否摘除  json  依赖jar太多-->
	<dependency>
		<groupId>net.sf.json-lib</groupId>
		<artifactId>json-lib</artifactId>
		<version>2.3</version>
		<classifier>jdk15</classifier>
		<exclusions>
		  <exclusion>
		    <artifactId>ezmorph</artifactId>
		    <groupId>net.sf.ezmorph</groupId>
		  </exclusion>
		</exclusions>
	</dependency>

    <dependency>
      <groupId>org.jdom</groupId>
      <artifactId>jdom</artifactId>
      <version>1.1</version>
    </dependency>

  </dependencies>

  <build>
    
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.7.2</version>
        <configuration>
          <!-- 解决控制台输出乱码问题 -->
          <forkMode>once</forkMode>
          <argLine>-Dfile.encoding=UTF-8</argLine>
          <systemProperties>
            <property>
              <name>net.sourceforge.cobertura.datafile</name>
              <value>target/cobertura/cobertura.ser</value>
            </property>
          </systemProperties>
          <!-- 跳过测试 -->
          <skipTests>true</skipTests>
        </configuration>
      </plugin>
      
      <!-- 自动生成脚本插件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>catt-maven-plugin</artifactId>
        <version>1.0.0.0-beta</version>
        <executions>
          <execution>
            <id>catt-test</id>
            <phase>package</phase>
            <goals>
              <goal>package</goal>
            </goals>
            <configuration>
              <scriptType>lib</scriptType>
              <mainClass>com.catt.frame.isp.Main</mainClass>
              <versionClass>com.catt.frame.isp.Version</versionClass>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <!-- 目录复制、删除 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>ant-build</id>
            <phase>package</phase>
            <configuration>
              <target>
                <echo>拷贝数据库脚本</echo>
                <copy todir="${release.dir}/script">
                  <fileset dir="script">
                  </fileset>
                </copy>
                <echo>拷贝项目配置文件</echo>
                <copy todir="${release.dir}/conf">
                  <fileset dir="conf">
                    <include name="*.xml" />
                    <include name="*.conf" />
                  </fileset>
                </copy>
                <echo>拷贝文档</echo>
                <copy todir="${release.dir}/doc/04使用手册">
                  <fileset dir="doc/04使用手册">
                  </fileset>
                </copy>
                <echo>拷贝编译jar文件</echo>
                <copy todir="${release.dir}/lib">
                  <fileset dir="${project.build.directory}">
                    <include name="${project.artifactId}-${project.version}.jar" />
                  </fileset>
                </copy>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <!-- 复制依赖jar包，根据情况复制 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.8</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${release.dir}/lib</outputDirectory>
              <excludeTransitive>false</excludeTransitive>
              <stripVersion>false</stripVersion>
            </configuration>
          </execution>
        </executions>
      </plugin>
		
		
      <!-- 版本打包插件，使用SVN命令行下载项目，再进行提交 mvn release:prepare mvn release:perform -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <tagBase>http://172.168.27.5:81/svn/release/300_wgjk/04_server/04_ISP/server-tags
          </tagBase>
        </configuration>
      </plugin>
      
       <!-- 打包源码 -->
       <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.1.2</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <!-- 打包jar源码 -->
              <goal>jar-no-fork</goal>
              <!-- 打包test源码 -->
              <goal>test-jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- 打包javadoc -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.9.1</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin> 
      
      <!-- build-helper-maven-plugin, 设置多个源文件夹 -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.4</version>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/src/main/adapter</source>
                <!-- 我们可以通过在这里添加多个source节点，来添加任意多个源文件夹 -->
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
        

    </plugins>
  </build>

  <distributionManagement>
    <repository>
      <id>Releases</id>
      <url>http://172.168.10.100:8081/nexus/content/repositories/releases</url>
    </repository>
    <snapshotRepository>
      <id>Snapshots</id>
      <url>http://172.168.10.100:8081/nexus/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>
</project>
